==2935642== Memcheck, a memory error detector
==2935642== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2935642== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==2935642== Command: ./bug-program
==2935642== 
==2935642== Invalid write of size 4
==2935642==    at 0x1091D5: add_key_value (bug-program.c:33)
==2935642==    by 0x1091D5: make_key_values (bug-program.c:62)
==2935642==    by 0x1091D5: main (bug-program.c:71)
==2935642==  Address 0x4a42098 is 0 bytes after a block of size 8 alloc'd
==2935642==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==2935642==    by 0x1091AF: add_key_value (bug-program.c:21)
==2935642==    by 0x1091AF: make_key_values (bug-program.c:62)
==2935642==    by 0x1091AF: main (bug-program.c:71)
==2935642== 
==2935642== Invalid write of size 8
==2935642==    at 0x1091DC: add_key_value (bug-program.c:33)
==2935642==    by 0x1091DC: make_key_values (bug-program.c:62)
==2935642==    by 0x1091DC: main (bug-program.c:71)
==2935642==  Address 0x4a420a0 is 8 bytes after a block of size 8 alloc'd
==2935642==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==2935642==    by 0x1091AF: add_key_value (bug-program.c:21)
==2935642==    by 0x1091AF: make_key_values (bug-program.c:62)
==2935642==    by 0x1091AF: main (bug-program.c:71)
==2935642== 
==2935642== Invalid read of size 4
==2935642==    at 0x1091EA: main (bug-program.c:73)
==2935642==  Address 0x4a42098 is 0 bytes after a block of size 8 alloc'd
==2935642==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==2935642==    by 0x1091AF: add_key_value (bug-program.c:21)
==2935642==    by 0x1091AF: make_key_values (bug-program.c:62)
==2935642==    by 0x1091AF: main (bug-program.c:71)
==2935642== 
==2935642== Invalid read of size 8
==2935642==    at 0x1091FD: main (bug-program.c:72)
==2935642==  Address 0x4a420a0 is 8 bytes after a block of size 8 alloc'd
==2935642==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==2935642==    by 0x1091AF: add_key_value (bug-program.c:21)
==2935642==    by 0x1091AF: make_key_values (bug-program.c:62)
==2935642==    by 0x1091AF: main (bug-program.c:71)
==2935642== 
==2935642== Conditional jump or move depends on uninitialised value(s)
==2935642==    at 0x48CE170: vfprintf (vfprintf.c:1638)
==2935642==    by 0x48D6605: printf (printf.c:33)
==2935642==    by 0x1091FC: main (bug-program.c:73)
==2935642== 
==2935642== Invalid read of size 8
==2935642==    at 0x10920E: free_key_values (bug-program.c:43)
==2935642==    by 0x10920E: main (bug-program.c:75)
==2935642==  Address 0x4a420a0 is 8 bytes after a block of size 8 free'd
==2935642==    at 0x48369AB: free (vg_replace_malloc.c:530)
==2935642==    by 0x10920D: free_key_values (bug-program.c:44)
==2935642==    by 0x10920D: main (bug-program.c:75)
==2935642==  Block was alloc'd at
==2935642==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==2935642==    by 0x1091AF: add_key_value (bug-program.c:21)
==2935642==    by 0x1091AF: make_key_values (bug-program.c:62)
==2935642==    by 0x1091AF: main (bug-program.c:71)
==2935642== 
==2935642== 
==2935642== HEAP SUMMARY:
==2935642==     in use at exit: 5 bytes in 1 blocks
==2935642==   total heap usage: 4 allocs, 3 frees, 1,045 bytes allocated
==2935642== 
==2935642== 5 bytes in 1 blocks are definitely lost in loss record 1 of 1
==2935642==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==2935642==    by 0x1091BC: add_key_value (bug-program.c:24)
==2935642==    by 0x1091BC: make_key_values (bug-program.c:62)
==2935642==    by 0x1091BC: main (bug-program.c:71)
==2935642== 
==2935642== LEAK SUMMARY:
==2935642==    definitely lost: 5 bytes in 1 blocks
==2935642==    indirectly lost: 0 bytes in 0 blocks
==2935642==      possibly lost: 0 bytes in 0 blocks
==2935642==    still reachable: 0 bytes in 0 blocks
==2935642==         suppressed: 0 bytes in 0 blocks
==2935642== 
==2935642== For counts of detected and suppressed errors, rerun with: -v
==2935642== Use --track-origins=yes to see where uninitialised values come from
==2935642== ERROR SUMMARY: 10 errors from 7 contexts (suppressed: 0 from 0)
